/*
 * generated by Xtext
 */
package be.unamur.iotdsl.xtext.validation

import com.google.common.collect.HashMultimap
import iotdsl.Device
import iotdsl.IoTDSLPackage
import iotdsl.NamedElement
import org.eclipse.xtext.validation.Check

import static extension be.unamur.iotdsl.xtext.util.IoTDSLUtil.*
//import static extension org.eclipse.xtext.EcoreUtil2.*

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class IoTDSLDuplicateValidator extends AbstractIoTDSLValidator {

	public static val DUPLICATE_NAME        = "DUPLICATE_NAME" 

//	@Check 
//	def void checkNoDuplicateDevices(IoTModel model) {
//		checkNoDuplicateElements(model.devices, "device")
//	}


	@Check 
	def void checkNoDuplicateDevices(Device device) {
		if (device.containingMetamodel.devices.exists[
				it != device && it.name == device.name])
			error("Duplicate device '" + device.name + "'",
				IoTDSLPackage::eINSTANCE.namedElement_Name,
				DUPLICATE_NAME)
	}
	
	def private void checkNoDuplicateElements(Iterable<? extends NamedElement> elements, String desc){
		val multiMap = HashMultimap.create()

		for (e : elements)
			multiMap.put(e.name, e)

		for (entry : multiMap.asMap.entrySet) {
			val duplicates = entry.value
			if (duplicates.size > 1) {
				for (d : duplicates)
					error(
						"Duplicate " + desc + " '" + d.name + "'",
						d,
						IoTDSLPackage.eINSTANCE.namedElement_Name, 
						DUPLICATE_NAME)
			}
		}
	}

//	@Check
//	def void checkNoDuplicateEnumeration(Enumeration e){
//		if(e.containingMetamodel.enumerations.exists[it != e && it.name == e.name])
//			error("Duplicate enumeration '" + e.name + "'",
//				IoTDSLPackage::eINSTANCE.namedElement_Name,
//				DUPLICATE_NAME
//			)
//	}
//	
//	@Check
//	def void checkNoDuplicateEnumerationLiteral(EnumerationLiteral lit) {
//		if (lit.containingEnumeration.literals.exists[it != lit && it.name == lit.name])
//			error("Duplicate enumeration literal '" + lit.name + "'",
//					IoTDSLPackage::eINSTANCE.namedElement_Name,
//					DUPLICATE_NAME)
//	}
//
//	@Check
//	def void checkNoDuplicateGateway(Gateway gateway){
//		if(gateway.containingMetamodel.gateways.exists[it != gateway && it.name == gateway.name])
//			error("Duplicate gateway '" + gateway.name + "'",
//				IoTDSLPackage::eINSTANCE.namedElement_Name,
//				DUPLICATE_NAME)
//	}
//
//	@Check
//	def void checkNoDuplicateDevice(Device device){
//		if(device.containingMetamodel.devices.exists[it != device && it.name == device.name])
//			error("Duplicate device '" + device.name + "'",
//				IoTDSLPackage::eINSTANCE.namedElement_Name,
//				DUPLICATE_NAME)
//	}
//
//	@Check
//	def void checkNoDuplicateProperty(Property prop){
//		val duplicate = prop.containingDevice.properties.findFirst[it != prop && it.name == prop.name]
//		if(duplicate != null)
//			error("Duplicate property declaration '" + prop.name + "'",
//				IoTDSLPackage::eINSTANCE.namedElement_Name,
//				DUPLICATE_NAME)
//	}
//
//	@Check
//	def void checkNoDuplicateEvent(Event event){ 
//		if(event.containingDevice.events.exists[ 
//			it != event && 
//			it.name == event.name])
//			error("Duplicate event declaration'" + event.name + "'",
//				IoTDSLPackage::eINSTANCE.namedElement_Name,
//				DUPLICATE_NAME)
//	}
//
//	@Check
//	def void checkNoDuplicateParameter(Parameter param){
//		val duplicate = param.containingEvent.parameters.findFirst[it != param && it.name == param.name]
//		if(duplicate != null)
//			error("Duplicate parameter declaration '" + param.name + "'",
//				IoTDSLPackage::eINSTANCE.namedElement_Name,
//				DUPLICATE_NAME)
//	}

//	@Check
//	def void checkNoDuplicateVariable(VariableDeclaration variable){
//		val duplicate = variable.containingConfiguration.variables.findFirst[it != variable && it.name == variable.name]
//		if(duplicate != null)
//			error("Duplicate variable declaration '" + variable.name + "'",
//				IoTDevicePackage::eINSTANCE.namedElement_Name,
//				DUPLICATE_NAME)
//	}
//
//	@Check
//	def void checkNoDuplicateVariableLiteral(Target target){
//		val duplicate = target.containingCollectionLiteral.value.findFirst[it != target && it.ref.name == target.ref.name]
//		if(duplicate != null)
//			error("Duplicate parameter declaration '" + target.ref.name + "'",
//				IoTDevicePackage::eINSTANCE.namedElement_Name,
//				DUPLICATE_NAME)
//	}
//
//
//	@Check
//	def void checkNoDuplicateRule(Rule rule){
//		if(rule.containingMetamodel.rules.exists[it != rule && it.name == rule.name])
//			error("Duplicate rule declaration '" + rule.name + "'",
//				IoTDevicePackage::eINSTANCE.namedElement_Name,
//				DUPLICATE_NAME)
//	}
}
