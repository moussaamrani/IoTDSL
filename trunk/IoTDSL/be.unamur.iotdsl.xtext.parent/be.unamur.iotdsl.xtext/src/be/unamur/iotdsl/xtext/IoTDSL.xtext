// automatically generated by Xtext
grammar be.unamur.iotdsl.xtext.IoTDSL with org.eclipse.xtext.common.Terminals

import "http://www.unamur.be/IoTDSL" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

IoTModel returns IoTModel:
	{IoTModel} 
	(types+=Type)* 
//	(configuration+=NetworkConfiguration)* 
//	(rules+=Rule)* 
;

Type returns Type:
	DeclaredType | PrimitiveType;

DeclaredType: 
	Node | Enumeration 
;

Enumeration:
	'enumeration' name=ValidID '{'
		(literals += EnumerationLiteral ';')*
	'}'
;
EnumerationLiteral:
	{EnumerationLiteral} name=ValidID
;

PrimitiveType:
	IntegerType | BooleanType | StringType | RealType
;
IntegerType: {IntegerType} name="integer";
BooleanType: {BooleanType} name="boolean";
StringType:  {StringType}  name="string";
RealType:    {RealType}    name="real";

Gateway returns Gateway:
	{Gateway} 'gateway' name=ValidID;

Node returns Node:
	Gateway | Device
;

Device returns Device:
	{Device} 'device' name=ValidID '{' (features += Feature*) '}';

Feature returns Feature:
	Property | Event;

Property returns Property:
	'property' name=ValidID ':' type=TypeReference
;

Event returns Event:
	'event' name=ValidID '(' 
		(parameters += Parameter (',' parameters += Parameter)*)? 
	')'
;

Parameter returns Parameter:
	name=ValidID ':' type=TypeReference
;

TypeReference:
	ptype = PrimitiveType | dtype = [DeclaredType|QualifiedName]
;

QualifiedName:
  ValidID (=>'.' ValidID)*
;

ValidID:
	ID
;

//EString returns ecore::EString:
//	STRING | ID;
	